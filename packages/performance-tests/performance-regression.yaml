# Azure pipeline yaml to run the tests against test iModels
name: itwinjs-transformer-performance-$(Date:yyyyMMdd)

trigger: none

# schedules:
# - cron: "0 0 * * 0"
#  displayName: Midnight Every Sunday
#  branches:
#    include:
#    - master
#  always: true

stages:
  - stage: build
    displayName: Build

    pool:
      demands:
      - Agent.OS -equals Linux
      name: iModelTechLnxDeb11

    jobs:
      - job:
        displayName: Build

        steps:
          - task: NodeTool@0
            displayName: 'Use Node 18.x'
            inputs:
              versionSpec: 18.*.*

          - powershell: |
              $npmrcContent = @"
                @bentley:registry=https://bentleycs.pkgs.visualstudio.com/_packaging/Packages/npm/registry/
                always-auth=true
              "@
              $npmrcContent | Out-File $(Pipeline.Workspace)/.npmrc -Encoding ascii
            displayName: 'Create .npmrc'

          - task: npmAuthenticate@0
            displayName: 'Authenticate'
            inputs:
              workingFile: $(Pipeline.Workspace)/.npmrc

          - script: |
              npm install -g pnpm@^7
              pnpm i --frozen-lockfile
            displayName: 'install pnpm'
            workingDirectory: $(Pipeline.Workspace)/s

          - script: npm run build
            displayName: 'npm build'
            workingDirectory: $(Pipeline.Workspace)/s

          - task: PublishPipelineArtifact@1
            displayName: 'Publish packages'
            inputs:
              targetPath: $(Pipeline.Workspace)/s/packages
              artifactName: packages


  - stage: run
    displayName: Run

    pool:
      name: iModelTech Performance Tests
      demands:
      - Agent.OS -equals Windows_NT
      - Cmd

    variables:
      - group: iTwin.js Performance Test Users                  # auth info of users that have access to test iModels and kill GPB
      - group: iTwin.js Transformation Performance tests        # OIDC id
    jobs:
      - job:
        displayName: "Run: Typical Cases"
        timeoutInMinutes: 360
        workspace:
          clean: all
        steps:
          - task: NodeTool@0
            displayName: 'Use Node 18.x'
            inputs:
              versionSpec: 18.*.*

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'packages'
              targetPath: '$(Pipeline.Workspace)/packages'
            displayName: download TestRunner

          - script: |
              ROBOCOPY $(Pipeline.Workspace)\packages .\s\packages /MIR
              dir packages
            displayName: 'copy package artifact'
            workingDirectory: $(Pipeline.Workspace)/

          - script: npm install -g pnpm@^7
            displayName: 'install pnpm'
            workingDirectory: $(Pipeline.Workspace)/s

          - script: pnpm i
            displayName: 'pnpm install'
            workingDirectory: $(Pipeline.Workspace)/s/packages/performance-tests

          - script: |
                npm test
            displayName: 'npm test'
            workingDirectory: $(Pipeline.Workspace)/s/packages/performance-tests
            timeoutInMinutes: 360
            env:
              CI: 1
              # V1_CHECKPOINT_USER_NAME: $(imjs_v1_checkpoint_user_email)
              # V1_CHECKPOINT_USER_PASSWORD: $(imjs_v1_checkpoint_user_password)
              ORCHESTRATOR_ADMIN_USER_NAME: $(imjs_orchestrator_admin_email)
              ORCHESTRATOR_ADMIN_USER_PASSWORD: $(imjs_orchestrator_admin_password)
              IMODEL_USER_NAME: $(imjs_user_email)
              IMODEL_USER_PASSWORD: $(imjs_user_password)
              OIDC_CLIENT_ID: $(OIDC_CLIENT_ID)
              OIDC_REDIRECT: http://localhost:3000/signin-callback
              IMJS_URL_PREFIX: qa-
            continueOnError: true

          - publish: $(Pipeline.Workspace)/s/packages/performance-tests/test/.output/report.csv
            artifact: PerformanceTestReport-Typical
            condition: always()

  - stage: publish
    displayName: Publish Results
    # condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

    pool:
      name: iModelTechCI
      demands:
      - Agent.OS -equals Windows_NT
      - Cmd

    variables:
      - group: Performance Testing Database User # auth info of a user for uploading test results

    jobs:
      - job:
        displayName: "Publish Results: Typical Cases"

        steps:
          - download: current
            displayName: "Download Tests Report: Typical Cases"
            artifact: PerformanceTestReport-Typical

          - task: bentleysystemsinternal.iModel-Utilities-tasks.PerfData.PerfData@1
            displayName: "Upload Typical Cases Results"
            inputs:
              AppId: iTwin.js Transformer
              CsvPath: $(Pipeline.Workspace)/PerformanceTestReport-Typical/report.csv
              BuildId: $(Build.BuildId)
              DbName: imodeljsperfdata.database.windows.net
              DbUser: $(DB_USER)
              DbPassword: $(DB_PW)

